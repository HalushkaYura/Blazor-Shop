@page "/products/edit/{productId:int}"

@using MintStores.Core.Model
@using MintStores.Core
@inject IBaseService<Product> _baseProductService
@inject IBaseService<Brand> _baseBrandService
@inject IBaseService<Category> _baseCategoryService
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager

<h3>Edit Product</h3>

@if (product != null)
{
    <form>
        <div class="form-group">
            <label for="ProductName">Product Name:</label>
            <input type="text" class="form-control" id="ProductName" @bind="product.ProductName" />
        </div>
        <div class="form-group">
            <label for="Price">Price:</label>
            <input type="number" class="form-control" id="Price" @bind="product.Price" />
        </div>
        <div class="form-group">
            <label for="BrandId">Brand:</label>
            <select class="form-control" id="BrandId" @bind="product.BrandId">
                @foreach (var brand in brands)
                {
                    <option value="@brand.BrandId">@brand.BrandName</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="CategoryId">Category:</label>
            <select class="form-control" id="CategoryId" @bind="product.CategoryId">
                @foreach (var category in categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </select>
        </div>
        <button type="button" class="btn btn-primary" @onclick="SaveProduct">Save</button>
    </form>
}
else
{
    <p>Product not found.</p>
}

<button @onclick="NavigateToProductList">Back to Product List</button>

@code {
    private Product product;
    private IEnumerable<Brand> brands;
    private IEnumerable<Category> categories;
    [Parameter]
    public int ProductId { get; set; }

    protected override void OnInitialized()
    {
        // Отримання productId з URL
        

        product = _baseProductService.GetItemById(ProductId);

        // Завантаження брендів та категорій при ініціалізації компонента
        brands = _baseBrandService.GetAllItems().ToList();
        categories = _baseCategoryService.GetAllItems().ToList();
    }

    private void SaveProduct()
    {
        // Оновлення продукта
        _baseProductService.UpdateItem(ProductId, product);

        // Перенаправлення на сторінку списку продуктів після збереження
        NavigateToProductList();
    }

    private void NavigateToProductList()
    {
        NavigationManager.NavigateTo("/dbtest", true);
    }
}
